//
//  LQLoginVC.m
//  FastView
//
//  Created by admin on 15/1/22.
//  Copyright (c) 2015年 dieshang. All rights reserved.
//

#import "LQLoginVC.h"
#import "LQAccountVC.h"
#import "LQLoginModel.h"

#define TextField_Height 35

@interface LQLoginVC ()<UITextFieldDelegate>

@property (nonatomic, weak) LQNoCopyTextField *accountTextField;
@property (nonatomic, weak) LQNoCopyTextField *passwordTextField;

@end

@implementation LQLoginVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.navigationItem.title = @"朝阳自助收费";
    
    [self doLoading];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
}

- (void)doLoading
{
    YTKKeyValueStore *store = [[YTKKeyValueStore alloc] initDBWithName:SQL_Name];
    NSDictionary *dic       = [store getObjectById:@"account" fromTable:@"account"];
    NSString *accountName   = [dic valueForKey:@"accountName"];
    NSString *password      = [dic valueForKey:@"password"];
    NSString *loginSuccess  = [dic valueForKey:@"loginSuccess"];
    
    UIImageView *logoImageView           = [[UIImageView alloc] init];
    logoImageView.image                  = [UIImage imageNamed:@"默认头像"];
    [self.view addSubview:logoImageView];
    [logoImageView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.view.mas_top).with.offset(90);
        make.centerX.equalTo(self.view.mas_centerX);
        make.size.mas_equalTo(CGSizeMake(60, 60));
    }];
    
    //2.账号输入框
    LQNoCopyTextField *accountTextField  = [[LQNoCopyTextField alloc] init];
    accountTextField.backgroundColor     = [UIColor whiteColor];
    accountTextField.layer.cornerRadius  = Layer_CornerRadius;
    accountTextField.layer.borderColor   = Layer_BorderColor;
    accountTextField.layer.borderWidth   = Layer_BorderWidth;
    accountTextField.delegate            = self;
    accountTextField.font                = [UIFont systemFontOfSize:15];
    accountTextField.text                = accountName;
    [self setTextFieldLeftImageView:accountTextField leftImageName:@"登录-用户"];
    [self.view addSubview:accountTextField];
    [accountTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(logoImageView.mas_bottom).with.offset(20);
        make.left.equalTo(self.view.mas_left).with.offset(35);
        make.right.equalTo(self.view.mas_right).with.offset(-35);
        make.height.equalTo([NSNumber numberWithFloat:TextField_Height]);
    }];
    self.accountTextField                = accountTextField;
    
    //3.密码输入框
    LQNoCopyTextField *passwordTextField = [[LQNoCopyTextField alloc] init];
    passwordTextField.leftView           = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"password"]];
    passwordTextField.backgroundColor    = [UIColor whiteColor];
    passwordTextField.layer.cornerRadius = Layer_CornerRadius;
    passwordTextField.layer.borderColor  = Layer_BorderColor;
    passwordTextField.layer.borderWidth  = Layer_BorderWidth;
    passwordTextField.secureTextEntry    = YES;
    passwordTextField.delegate           = self;
    passwordTextField.font               = [UIFont systemFontOfSize:15];
    passwordTextField.text               = password;
    passwordTextField.clearButtonMode    = UITextFieldViewModeWhileEditing;
    [self setTextFieldLeftImageView:passwordTextField leftImageName:@"登录-密码"];
    [self.view addSubview:passwordTextField];
    [passwordTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.accountTextField.mas_bottom).with.offset(10);
        make.left.right.and.height.equalTo(self.accountTextField);
    }];
    self.passwordTextField               = passwordTextField;
    
    //4.登陆按钮
    UIButton *loginButton                = [[UIButton alloc] init];
    [loginButton setTitle:@"登录" forState:UIControlStateNormal];
    [loginButton setBackgroundImage:[UIImage imageNamed:@"按钮-绿"] forState:UIControlStateNormal];
    [loginButton setBackgroundImage:[UIImage imageNamed:@"按钮-绿-按下"] forState:UIControlStateHighlighted];
    loginButton.layer.cornerRadius       = Layer_CornerRadius;
    loginButton.layer.borderColor        = [UIColor clearColor].CGColor;
    loginButton.layer.borderWidth        = Layer_BorderWidth;
    loginButton.layer.masksToBounds      = YES;
    loginButton.titleLabel.font          = [UIFont systemFontOfSize:15];
    [loginButton addTarget:self action:@selector(login) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:loginButton];
    [loginButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.passwordTextField.mas_bottom).with.offset(10);
        make.left.and.right.equalTo(self.passwordTextField);
        make.height.equalTo(@40);
    }];
    
    //忘记密码
    UIButton *forgetPwBtn                = [[UIButton alloc] init];
    [forgetPwBtn setTitle:@"忘记密码？" forState:UIControlStateNormal];
    [forgetPwBtn setTitleColor:[UIColor colorWithHex:@"#3498DB"] forState:UIControlStateNormal];
    [forgetPwBtn setTitleColor:[UIColor colorWithHex:@"#2980B9"] forState:UIControlStateHighlighted];
    forgetPwBtn.titleLabel.font          = [UIFont systemFontOfSize:15];
    forgetPwBtn.titleLabel.textAlignment = NSTextAlignmentRight;
    [self.view addSubview:forgetPwBtn];
    [forgetPwBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(loginButton.mas_bottom).with.offset(10);
        make.right.equalTo(loginButton.mas_right);
        make.size.mas_equalTo(CGSizeMake(80, 20));
    }];
    
    if (loginSuccess)
    {
        //登陆等待指示器
        MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        hud.mode = MBProgressHUDModeIndeterminate;
        hud.labelText = @"正在登录...";
        
        [self doLoginRequest];
    }
}


/**
 *  设置输入框前的图片
 */
- (void)setTextFieldLeftImageView:(UITextField *)textField leftImageName:(NSString *)imageName
{
    // 设置左边显示一个放大镜
    UIImageView *leftView     = [[UIImageView alloc] init];
    leftView.image            = [UIImage imageNamed:imageName];
    leftView.height           = TextField_Height;
    leftView.width            = TextField_Height;
    
    // 设置leftView的内容居中
    leftView.contentMode      = UIViewContentModeCenter;
    textField.leftView        = leftView;
    
    // 设置左边的view永远显示
    textField.leftViewMode    = UITextFieldViewModeAlways;
    
    // 设置右边永远显示清除按钮
    textField.clearButtonMode = UITextFieldViewModeAlways;
}

/**
 *  登录操作
 */
- (void)login
{
    //释放键盘
    [self.view endEditing:YES];
    
    //判断输入框内容是否为空
    if ([self.accountTextField.text isEqualToString:@""] || [self.passwordTextField.text isEqualToString:@""])
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示"
                                                        message:@"请输入你的账号和密码"
                                                       delegate:nil
                                              cancelButtonTitle:@"确定"
                                              otherButtonTitles: nil];
        [alert show];
        
        return;
    }
    
    //判断密码输入框的位数是否小雨6位
    if (self.passwordTextField.text.length < 6)
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示"
                                                        message:@"密码长度必须在6～24位之间"
                                                       delegate:nil
                                              cancelButtonTitle:@"确定"
                                              otherButtonTitles: nil];
        [alert show];
        
        return;
    }
    
    [self doLoginRequest];
}

- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

#pragma mark - 网络请求
- (void)doLoginRequest
{
    //登陆等待指示器
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    hud.mode           = MBProgressHUDModeIndeterminate;
    hud.labelText      = @"正在登录...";
    
    //将账户密码存储到数据库
    YTKKeyValueStore *store  = [[YTKKeyValueStore alloc] initDBWithName:SQL_Name];
    NSString *tableName      = SQL_Account_TableName;
    [store createTableWithName:tableName];
    NSString *key            = SQL_Account_Key;
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    dic[@"accountName"]      = self.accountTextField.text;
    dic[@"password"]         = self.passwordTextField.text;
    
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    NSString *urlStr                       = [NSString stringWithFormat:@"%@/energy/do/chargeapp/signon.do",IP];
    NSDictionary *parameters               = @{@"LinkMobile":self.accountTextField.text,@"Pwd":self.passwordTextField.text};
    
    [manager POST:urlStr parameters:parameters success:^(AFHTTPRequestOperation *operation, id responseObject)
    {
        LQLog(@"%@",operation.responseString);
        
        [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
        
        LQLoginModel *loginModel = [LQLoginModel objectWithKeyValues:operation.responseString];
        
        if (loginModel.returns)
        {
            loginModel.linkMobile       = self.accountTextField.text;

            dic[@"loginSuccess"]        = [NSNumber numberWithBool:YES];
            dic[@"sessionid"]           = loginModel.sessionid;

            LQAccountVC *accountVC      = [[LQAccountVC alloc] init];
            accountVC.loginModel        = loginModel;
            LQNavigationController *nav = [[LQNavigationController alloc] initWithRootViewController:accountVC];
            [self presentViewController:nav animated:NO completion:nil];
        }
        else
        {
            dic[@"loginSuccess"] = [NSNumber numberWithBool:NO];

            UIAlertView *alter   = [[UIAlertView alloc] initWithTitle:nil
                                                            message:loginModel.info
                                                           delegate:nil
                                                  cancelButtonTitle:nil
                                                  otherButtonTitles:@"确定", nil];
            [alter show];
        }
        
        [store putObject:dic withId:key intoTable:tableName];
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        
        LQLog(@"%@",error);
        
        dic[@"loginSuccess"] = [NSNumber numberWithBool:NO];
        [store putObject:dic withId:key intoTable:tableName];

        [MBProgressHUD hideAllHUDsForView:self.view animated:NO];

        MBProgressHUD *hud   = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        hud.labelText        = HTTPRequestErrer_Text;
        hud.mode             = MBProgressHUDModeText;
        [hud hide:YES afterDelay:1.5];
        
    }];
}

#pragma mark - Textfield Delegate
//释放键盘
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self.view endEditing:YES];
    
    return YES;
}

//限制textfield字符长度
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if ([string isEqualToString:@"\n"])  //按会车可以改
    {
        return YES;
    }
    
    NSString * toBeString = [textField.text stringByReplacingCharactersInRange:range withString:string]; //得到输入框的内容
    
    if ([toBeString length] > 24)
    {
        textField.text = [toBeString substringToIndex:24];
        return NO;
    }
    
    return YES;
}

#pragma mark -

- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

@end
