//
//  LQAccountBillView.m
//  朝阳能源结算
//
//  Created by admin on 15/8/11.
//  Copyright (c) 2015年 dieshang. All rights reserved.
//
//-------------------------------------------------------------
//-------------------------------------------------------------
//-------------------------------------------------------------
//-------------------------------------------------------------
//-------------------户头详情-账单-----------------------------
//-------------------------------------------------------------
//-------------------------------------------------------------
//-------------------------------------------------------------
//-------------------------------------------------------------
//-------------------------------------------------------------

#import "LQAccountBillView.h"
#import "LQCalendarView.h"
#import "LQChooseMonthBtnGroup.h"
#import "LQPaidChargeModel.h"
#import "LQPaidChargeItemsModel.h"
#import "LQAccountItemModel.h"
#import "LQOrderModel.h"


#define RechargeRecordBtn_Height 40
#define ChooseModulaiBtn_FontOfSize 15

@interface LQAccountBillView()<UIScrollViewDelegate,LQYearAnalysisViewDelegate,LQRechargeRecordViewDelegate,LQMonthAnalysisViewDelegate>

@property (nonatomic, weak  ) UIView                *lineView;
@property (nonatomic, weak  ) UIButton              *rechargeRecordBtn;
@property (nonatomic, weak  ) UIButton              *monthAnalysisBtn;
@property (nonatomic, weak  ) UIButton              *yearAnalysisBtn;
@property (nonatomic, weak  ) UIScrollView          *scrollView;
@property (nonatomic, weak  ) UIView                *scrollBackgroundView;
@property (nonatomic, copy  ) NSString              *accountid;
@property (nonatomic, copy  ) NSString              *unit;
@property (nonatomic, copy  ) NSString              *sessionid;
@property (nonatomic, assign) int                   rechmodle;
@property (nonatomic, strong) LQAccountItemModel *accountItemModel;

@end

@implementation LQAccountBillView

- (UIView *)lineView
{
    if (_lineView == nil)
    {
        UIView *lineView = [[UIView alloc] init];
        lineView.backgroundColor = [UIColor redColor];
        [self addSubview:lineView];
        
        [lineView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.equalTo(self.rechargeRecordBtn.mas_centerX);
            make.bottom.equalTo(self.rechargeRecordBtn.mas_bottom);
            make.size.mas_equalTo(CGSizeMake(LQScreen_Width/3 - 40, 3));
        }];
        
        _lineView = lineView;
    }
    
    return _lineView;
}

- (UIButton *)rechargeRecordBtn
{
    if (_rechargeRecordBtn == nil)
    {
        NSString *str;
        if (self.rechmodle == 1)
        {
            str = @"充值记录";
        }
        else
        {
            str = @"账单记录";
        }
        
        _rechargeRecordBtn = [self buttonWithTitle:str action:@selector(chooseModular:)];
        _rechargeRecordBtn.titleLabel.font = [UIFont boldSystemFontOfSize:ChooseModulaiBtn_FontOfSize];
        _rechargeRecordBtn.tag = 300;
        
        [_rechargeRecordBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.mas_top);
            make.left.equalTo(self.mas_left);
            make.size.mas_equalTo(CGSizeMake(LQScreen_Width/3, RechargeRecordBtn_Height));
        }];
        
        //画分割线
        UIView *dividingLine1 = [[UIView alloc] init];
        dividingLine1.backgroundColor = RGB(236, 236, 236);
        [self addSubview:dividingLine1];
        [dividingLine1 mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.and.right.equalTo(self);
            make.bottom.equalTo(self.rechargeRecordBtn.mas_bottom);
            make.height.equalTo(@1);
        }];
        UIView *dividingLine2 = [[UIView alloc] init];
        dividingLine2.backgroundColor = dividingLine1.backgroundColor;
        [self addSubview:dividingLine2];
        [dividingLine2 mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.and.right.equalTo(self);
            make.top.equalTo(self.rechargeRecordBtn.mas_top);
            make.height.equalTo(@1);
        }];
    }
    
    return _rechargeRecordBtn;
}

- (UIButton *)monthAnalysisBtn
{
    if (_monthAnalysisBtn == nil)
    {
        _monthAnalysisBtn = [self buttonWithTitle:@"月用能分析" action:@selector(chooseModular:)];
        _monthAnalysisBtn.tag = 301;
        
        [_monthAnalysisBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.mas_top);
            make.left.equalTo(self.rechargeRecordBtn.mas_right);
            make.size.mas_equalTo(CGSizeMake(LQScreen_Width/3, RechargeRecordBtn_Height));
        }];
    }
    
    return _monthAnalysisBtn;
}

- (UIButton *)yearAnalysisBtn
{
    if (_yearAnalysisBtn == nil)
    {
        _yearAnalysisBtn = [self buttonWithTitle:@"年用能分析" action:@selector(chooseModular:)];
        _yearAnalysisBtn.tag = 302;
        
        [_yearAnalysisBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.mas_top);
            make.left.equalTo(self.monthAnalysisBtn.mas_right);
            make.size.mas_equalTo(CGSizeMake(LQScreen_Width/3, RechargeRecordBtn_Height));
        }];
    }
    
    return _yearAnalysisBtn;
}

- (UIScrollView *)scrollView
{
    if (_scrollView == nil)
    {
        UIScrollView *scrollView = [[UIScrollView alloc] init];
        scrollView.delegate = self;
        scrollView.pagingEnabled = YES;
        [self addSubview:scrollView];
        
        [scrollView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.mas_left);
            make.top.equalTo(self.yearAnalysisBtn.mas_bottom);
            make.bottom.equalTo(self.mas_bottom);
            make.width.equalTo([NSNumber numberWithFloat:LQScreen_Width]);
        }];
        
        _scrollView = scrollView;
    }
    
    return _scrollView;
}

- (UIView *)scrollBackgroundView
{
    if (_scrollBackgroundView == nil)
    {
        UIView *view = [[UIView alloc] init];
        [self.scrollView addSubview:view];
        
        [view mas_makeConstraints:^(MASConstraintMaker *make) {
            make.edges.equalTo(self.scrollView);
            make.width.equalTo([NSNumber numberWithFloat:LQScreen_Width*3]);
            make.height.equalTo(self.scrollView);
        }];
        
        _scrollBackgroundView = view;
    }
    
    return _scrollBackgroundView;
}

- (LQRechargeRecordView *)rechargeRecordView
{
    if (!_rechargeRecordView)
    {
        LQRechargeRecordView *view = [LQRechargeRecordView rechargeRecordViewWithFrame:CGRectZero accountid:self.accountid sessionid:self.sessionid accountItemModel:self.accountItemModel];
        view.delegate = self;
        [self.scrollBackgroundView addSubview:view];
        
        [view mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.and.bottom.equalTo(self.scrollBackgroundView);
            make.left.equalTo(self.scrollBackgroundView.mas_left);
            make.width.mas_equalTo(self.scrollView);
        }];
        
        _rechargeRecordView = view;
    }
    
    return _rechargeRecordView;
}

- (LQMonthAnalysisView *)monthAnalysisView
{
    if (_monthAnalysisView == nil)
    {
        LQMonthAnalysisView *view = [LQMonthAnalysisView monthAnalysisViewWithFrame:CGRectZero accountItemModel:self.accountItemModel];
        view.delegate = self;
        [self.scrollBackgroundView addSubview:view];
        
        [view mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.and.bottom.equalTo(self.scrollBackgroundView);
            make.left.equalTo(self.rechargeRecordView.mas_right);
            make.width.mas_equalTo(self.scrollView);
        }];
        
        _monthAnalysisView = view;
    }
    
    return _monthAnalysisView;
}

- (LQYearAnalysisView *)yearAnalysisView
{
    if (_yearAnalysisView == nil)
    {
        LQYearAnalysisView *view = [LQYearAnalysisView yearAnalysisViewWithFrame:CGRectZero accountid:self.accountid sessionid:self.sessionid unit:self.unit];
        view.delegate = self;
        [self.scrollBackgroundView addSubview:view];
        
        [view mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.and.bottom.equalTo(self.scrollBackgroundView);
            make.right.equalTo(self.scrollBackgroundView.mas_right);
            make.width.mas_equalTo(self.scrollView);
        }];
        
        _yearAnalysisView = view;
    }
    
    return _yearAnalysisView;
}

- (UIButton *)buttonWithTitle:(NSString *)title action:(SEL)action
{
    UIButton *button = [[UIButton alloc] init];
    [button setTitle:title forState:UIControlStateNormal];
    [button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    button.titleLabel.font = [UIFont systemFontOfSize:ChooseModulaiBtn_FontOfSize];
    [button addTarget:self action:action forControlEvents:UIControlEventTouchUpInside];
    [self addSubview:button];
    
    return button;
}

#pragma mark -
+ (instancetype)accountBillViewWithFrame:(CGRect)frame accountID:(NSString *)accountID accountItemModel:(LQAccountItemModel *)accountItemModel
{
    return [[self alloc] initWithFrame:frame accountID:accountID accountItemModel:accountItemModel];
}

- (instancetype)initWithFrame:(CGRect)frame accountID:(NSString *)accountID accountItemModel:(LQAccountItemModel *)accountItemModel

{
    if (self = [super initWithFrame:frame])
    {
        YTKKeyValueStore *store  = [LQKeyValueStore shareInstance].keyValueStore;
        NSDictionary *accountDic = [NSMutableDictionary dictionaryWithDictionary:[store getObjectById:SQL_Account_Key fromTable:SQL_Account_TableName]];
        NSString *sessionid      = [accountDic valueForKey:@"sessionid"];
        
        self.accountItemModel = accountItemModel;
        self.unit     = accountItemModel.eunit;
        self.accountid = accountID;
        self.sessionid = sessionid;
        self.rechmodle = accountItemModel.rechmodle;
        
        [self doLoading];
        
    }
    
    return self;
}

- (void)doLoading
{
    [self chooseModular:self.rechargeRecordBtn];
    
    self.lineView.hidden                = NO;
}

/**
 *  功能模块的选择切换
 */
- (void)chooseModular:(UIButton *)btn
{
    self.rechargeRecordBtn.titleLabel.font = [UIFont systemFontOfSize:ChooseModulaiBtn_FontOfSize];
    self.monthAnalysisBtn.titleLabel.font  = [UIFont systemFontOfSize:ChooseModulaiBtn_FontOfSize];
    self.yearAnalysisBtn.titleLabel.font   = [UIFont systemFontOfSize:ChooseModulaiBtn_FontOfSize];
    
    btn.titleLabel.font = [UIFont boldSystemFontOfSize:ChooseModulaiBtn_FontOfSize];
    
    [self.lineView mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.centerX.equalTo(btn.mas_centerX);
        make.bottom.equalTo(btn.mas_bottom);
        make.size.mas_equalTo(CGSizeMake(LQScreen_Width/3 - 40, 3));
    }];
    
    [UIView animateWithDuration:0.5 animations:^{
        self.scrollView.contentOffset = CGPointMake(LQScreen_Width*(btn.tag - 300), 0);
    }];
    
    switch (btn.tag - 300)
    {
        case 0:
        {
            self.rechargeRecordView.hidden       = NO;
        }
            break;

        case 1:
        {
            self.monthAnalysisView.hidden       = NO;
        }
            break;
            
        case 2:
        {
            self.yearAnalysisView.hidden        = NO;
        }
            break;
    }
}

#pragma mark - LQRechargeRecordViewDelegate
- (void)showAccountTimeOutAlterViewWithRechargeRecordView:(LQRechargeRecordView *)view
{
    if ([self.delegate respondsToSelector:@selector(showAccountTimeOutAlterViewWithRechargeRecordView:inBillView:)])
    {
        [self.delegate showAccountTimeOutAlterViewWithRechargeRecordView:view inBillView:self];
    }
}

- (void)showOtherRequestReturnFalseAlterViewWithRechargeRecordView:(LQRechargeRecordView *)view message:(NSString *)message
{
    if ([self.delegate respondsToSelector:@selector(showOtherRequestReturnFalseAlterViewWithRechargeRecordView:message:inBillView:)])
    {
        [self.delegate showOtherRequestReturnFalseAlterViewWithRechargeRecordView:view message:message inBillView:self];
    }
}

- (void)billsCellDidClickSettlementBtnWithRechargeRecordView:(LQRechargeRecordView *)view Cell:(LQBillsCell *)cell orderModel:(LQOrderModel *)orderModel
{
    if ([self.delegate respondsToSelector:@selector(billsCellDidClickSettlementBtnWithRechargeRecordView:Cell:orderModel:inBillView:)])
    {
        [self.delegate billsCellDidClickSettlementBtnWithRechargeRecordView:view Cell:cell orderModel:orderModel inBillView:self];
    }
}

#pragma mark - LQMonthAnalysisViewDelegate
- (void)showAccountTimeOutAlterViewWithMonthAnalysisView:(LQMonthAnalysisView *)view
{
    if ([self.delegate respondsToSelector:@selector(showAccountTimeOutAlterViewWithMonthAnalysisView:inBillView:)])
    {
        [self.delegate showAccountTimeOutAlterViewWithMonthAnalysisView:view inBillView:self];
    }
}

- (void)showOtherRequestReturnFalseAlterViewWithMonthAnalysisView:(LQMonthAnalysisView *)view message:(NSString *)message
{
    if ([self.delegate respondsToSelector:@selector(showOtherRequestReturnFalseAlterViewWithMonthAnalysisView:message:inBillView:)])
    {
        [self.delegate showOtherRequestReturnFalseAlterViewWithMonthAnalysisView:view message:message inBillView:self];
    }
}

#pragma mark - LQYearAnalysisViewDelegate
- (void)showAccountTimeOutAlterViewWithYearAnalysisView:(LQYearAnalysisView *)view
{
    if ([self.delegate respondsToSelector:@selector(showAccountTimeOutAlterViewWithYearAnalysisView:inBillView:)])
    {
        [self.delegate showAccountTimeOutAlterViewWithYearAnalysisView:view inBillView:self];
    }
}

- (void)showOtherRequestReturnFalseAlterViewWithYearAnalysisView:(LQYearAnalysisView *)view message:(NSString *)message
{
    if ([self.delegate respondsToSelector:@selector(showOtherRequestReturnFalseAlterViewWithYearAnalysisView:message:inBillView:)])
    {
        [self.delegate showOtherRequestReturnFalseAlterViewWithYearAnalysisView:view message:message inBillView:self];
    }
}

#pragma mark - UIScrollViewDelegate
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    CGPoint offset = self.scrollView.contentOffset;
    CGFloat offsetX = offset.x;
    CGFloat width = self.scrollView.frame.size.width;
    int pageNum = offsetX  / width;
    
    UIButton *btn = nil;
    switch (pageNum) {
        case 0:
            btn = self.rechargeRecordBtn;
            break;
            
        case 1:
            btn = self.monthAnalysisBtn;
            break;
            
        case 2:
            btn = self.yearAnalysisBtn;
            break;
    }
    
    [self chooseModular:btn];
}

@end
