//
//  LQLoginVC.m
//  FastView
//
//  Created by admin on 15/1/22.
//  Copyright (c) 2015年 dieshang. All rights reserved.
//

#import "LQLoginVC.h"
#import "LQAccountVC.h"
#import "LQLoginModel.h"
#import "LQForgetPasswordVC.h"
#import "LQChooseIPArrayModel.h"
#import "LQChooseIPModel.h"

#define TextField_Height 35

@interface LQLoginVC ()<UITextFieldDelegate,UITableViewDataSource,UITableViewDelegate,UIAlertViewDelegate>

@property (nonatomic, weak) LQNoCopyTextField *chooseIPTextField;
@property (nonatomic, weak) LQNoCopyTextField *accountTextField;
@property (nonatomic, weak) LQNoCopyTextField *passwordTextField;
@property (nonatomic, weak) UITableView *chooseIPTableView;
@property (nonatomic, strong) NSMutableArray *chooseIPArray;

@end

@implementation LQLoginVC

- (NSMutableArray *)chooseIPArray
{
    if (!_chooseIPArray)
    {
        _chooseIPArray = [NSMutableArray array];
    }
    
    return _chooseIPArray;
}

- (UITableView *)chooseIPTableView
{
    if (!_chooseIPTableView)
    {
        UITableView *tableView = [[UITableView alloc] init];
        tableView.hidden = YES;
        tableView.delegate = self;
        tableView.dataSource = self;
        tableView.layer.cornerRadius = Layer_CornerRadius;
        tableView.layer.borderColor  = Layer_BorderColor;
        tableView.layer.borderWidth  = Layer_BorderWidth;
        [self.view addSubview:tableView];
        
        [tableView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.chooseIPTextField.mas_bottom).with.offset(2);
            make.left.and.right.equalTo(self.chooseIPTextField);
            make.height.mas_equalTo(150);
        }];
        
        _chooseIPTableView = tableView;
    }
    
    return _chooseIPTableView;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.navigationItem.title = @"朝阳自助收费";
    
    self.navigationItem.rightBarButtonItem = nil;
    
    [self doLoading];
    [self requestIP];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
}

- (void)doLoading
{
    NSDictionary *dic       = [[LQKeyValueStore shareInstance].keyValueStore getObjectById:SQL_Account_Key fromTable:SQL_Account_TableName];
    NSString *accountName   = [dic valueForKey:@"accountName"];
    NSString *password      = [dic valueForKey:@"password"];
//    NSString *loginSuccess  = [dic valueForKey:@"loginSuccess"];
    
    UIImageView *logoImageView           = [[UIImageView alloc] init];
    logoImageView.image                  = [UIImage imageNamed:@"默认头像"];
    [self.view addSubview:logoImageView];
    [logoImageView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.view.mas_top).with.offset(90);
        make.centerX.equalTo(self.view.mas_centerX);
        make.size.mas_equalTo(CGSizeMake(60, 60));
    }];
    
    //选择接入点IP
    LQNoCopyTextField *chooseIPTextField = [[LQNoCopyTextField alloc] init];
    chooseIPTextField.backgroundColor    = [UIColor whiteColor];
    chooseIPTextField.layer.cornerRadius = Layer_CornerRadius;
    chooseIPTextField.layer.borderColor  = Layer_BorderColor;
    chooseIPTextField.layer.borderWidth  = Layer_BorderWidth;
    chooseIPTextField.keyboardType       = UIKeyboardTypeNumberPad;
    chooseIPTextField.font               = [UIFont systemFontOfSize:15];
    chooseIPTextField.enabled            = NO;
    chooseIPTextField.placeholder        = @"请选择接入点";
    [self.view addSubview:chooseIPTextField];
    [chooseIPTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(logoImageView.mas_bottom).with.offset(20);
        make.left.equalTo(self.view.mas_left).with.offset(35);
        make.right.equalTo(self.view.mas_right).with.offset(-35);
        make.height.equalTo(@(TextField_Height));
    }];
    self.chooseIPTextField = chooseIPTextField;
    
    UIImageView *leftView           = [[UIImageView alloc] init];
    leftView.image                  = [UIImage imageNamed:@"登录-用户"];
    leftView.size                   = CGSizeMake(TextField_Height, TextField_Height);
    leftView.contentMode            = UIViewContentModeCenter;
    chooseIPTextField.leftView      = leftView;
    chooseIPTextField.leftViewMode  = UITextFieldViewModeAlways;

    UIImageView *rightImageView     = [[UIImageView alloc] init];
    rightImageView.image            = [UIImage imageNamed:@"下拉箭头"];
    rightImageView.size             = CGSizeMake(TextField_Height, TextField_Height);
    rightImageView.contentMode      = UIViewContentModeCenter;
    chooseIPTextField.rightView     = rightImageView;
    chooseIPTextField.rightViewMode = UITextFieldViewModeNever;
    
    UIButton *chooseIPButton = [[UIButton alloc] init];
    [chooseIPButton addTarget:self action:@selector(chooseIP) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:chooseIPButton];
    [chooseIPButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(logoImageView.mas_bottom).with.offset(20);
        make.left.equalTo(self.view.mas_left).with.offset(35);
        make.right.equalTo(self.view.mas_right).with.offset(-35);
        make.height.equalTo(@(TextField_Height));
    }];
    
    
    //账号输入框
    LQNoCopyTextField *accountTextField  = [[LQNoCopyTextField alloc] init];
    accountTextField.backgroundColor     = [UIColor whiteColor];
    accountTextField.layer.cornerRadius  = Layer_CornerRadius;
    accountTextField.layer.borderColor   = Layer_BorderColor;
    accountTextField.layer.borderWidth   = Layer_BorderWidth;
    accountTextField.keyboardType        = UIKeyboardTypeNumberPad;
    accountTextField.delegate            = self;
    accountTextField.font                = [UIFont systemFontOfSize:15];
    accountTextField.text                = accountName;
    [self setTextFieldLeftImageView:accountTextField leftImageName:@"登录-用户"];
    [self.view addSubview:accountTextField];
    [accountTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(chooseIPTextField.mas_bottom).with.offset(10);
        make.left.equalTo(self.view.mas_left).with.offset(35);
        make.right.equalTo(self.view.mas_right).with.offset(-35);
        make.height.equalTo(@(TextField_Height));
    }];
    self.accountTextField                = accountTextField;
    
    //密码输入框
    LQNoCopyTextField *passwordTextField = [[LQNoCopyTextField alloc] init];
    passwordTextField.leftView           = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"password"]];
    passwordTextField.backgroundColor    = [UIColor whiteColor];
    passwordTextField.layer.cornerRadius = Layer_CornerRadius;
    passwordTextField.layer.borderColor  = Layer_BorderColor;
    passwordTextField.layer.borderWidth  = Layer_BorderWidth;
    passwordTextField.secureTextEntry    = YES;
    passwordTextField.delegate           = self;
    passwordTextField.font               = [UIFont systemFontOfSize:15];
    passwordTextField.text               = password;
    passwordTextField.clearButtonMode    = UITextFieldViewModeWhileEditing;
    [self setTextFieldLeftImageView:passwordTextField leftImageName:@"登录-密码"];
    [self.view addSubview:passwordTextField];
    [passwordTextField mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.accountTextField.mas_bottom).with.offset(10);
        make.left.and.right.equalTo(self.accountTextField);
        make.height.equalTo(self.accountTextField.mas_height);
    }];
    self.passwordTextField               = passwordTextField;
    
    //登陆按钮
    UIButton *loginButton                = [[UIButton alloc] init];
    [loginButton setTitle:@"登录" forState:UIControlStateNormal];
    [loginButton setBackgroundImage:[UIImage imageNamed:@"按钮-绿"] forState:UIControlStateNormal];
    [loginButton setBackgroundImage:[UIImage imageNamed:@"按钮-绿-按下"] forState:UIControlStateHighlighted];
    loginButton.layer.cornerRadius       = Layer_CornerRadius;
    loginButton.layer.borderColor        = [UIColor clearColor].CGColor;
    loginButton.layer.borderWidth        = Layer_BorderWidth;
    loginButton.layer.masksToBounds      = YES;
    loginButton.titleLabel.font          = [UIFont systemFontOfSize:15];
    [loginButton addTarget:self action:@selector(login) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:loginButton];
    [loginButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.passwordTextField.mas_bottom).with.offset(10);
        make.left.and.right.equalTo(self.passwordTextField);
        make.height.equalTo(@40);
    }];
    
    //忘记密码
    UIButton *forgetPwBtn                = [[UIButton alloc] init];
    [forgetPwBtn setTitle:@"忘记密码？" forState:UIControlStateNormal];
    [forgetPwBtn setTitleColor:[UIColor colorWithHex:@"#3498DB"] forState:UIControlStateNormal];
    [forgetPwBtn setTitleColor:[UIColor colorWithHex:@"#2980B9"] forState:UIControlStateHighlighted];
    forgetPwBtn.titleLabel.font          = [UIFont systemFontOfSize:15];
    forgetPwBtn.titleLabel.textAlignment = NSTextAlignmentRight;
    [forgetPwBtn addTarget:self action:@selector(forgetPW) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:forgetPwBtn];
    [forgetPwBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(loginButton.mas_bottom).with.offset(10);
        make.right.equalTo(loginButton.mas_right);
        make.size.mas_equalTo(CGSizeMake(80, 20));
    }];
}


/**
 *  设置输入框前的图片
 */
- (void)setTextFieldLeftImageView:(UITextField *)textField leftImageName:(NSString *)imageName
{
    UIImageView *leftView     = [[UIImageView alloc] init];
    leftView.image            = [UIImage imageNamed:imageName];
    leftView.height           = TextField_Height;
    leftView.width            = TextField_Height;
    
    // 设置leftView的内容居中
    leftView.contentMode      = UIViewContentModeCenter;
    textField.leftView        = leftView;
    
    // 设置左边的view永远显示
    textField.leftViewMode    = UITextFieldViewModeAlways;
    
    // 设置右边永远显示清除按钮
    textField.clearButtonMode = UITextFieldViewModeWhileEditing;
}

/**
 *  登录操作
 */
- (void)login
{
    //释放键盘
    [self.view endEditing:YES];
    
    if ([self.chooseIPTextField.text isEqualToString:@""])
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示"
                                                        message:@"请选择接入点"
                                                       delegate:nil
                                              cancelButtonTitle:@"确定"
                                              otherButtonTitles: nil];
        [alert show];
        
        return;
    }
    
    //判断输入框内容是否为空
    if ([self.accountTextField.text isEqualToString:@""] || [self.passwordTextField.text isEqualToString:@""])
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示"
                                                        message:@"请输入你的账号和密码"
                                                       delegate:nil
                                              cancelButtonTitle:@"确定"
                                              otherButtonTitles: nil];
        [alert show];
        
        return;
    }
    
    //判断密码输入框的位数是否小雨6位
    if (self.passwordTextField.text.length < 6)
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示"
                                                        message:@"密码长度必须在6～24位之间"
                                                       delegate:nil
                                              cancelButtonTitle:@"确定"
                                              otherButtonTitles: nil];
        [alert show];
        
        return;
    }
    
    [self doLoginRequest];
}

- (void)forgetPW
{
//    LQChangePasswordVC *vc = [[LQChangePasswordVC alloc] init];
    LQForgetPasswordVC *vc = [[LQForgetPasswordVC alloc] init];
    [self.navigationController pushViewController:vc animated:YES];
}

/**
 *  下拉选择接入点IP
 */
- (void)chooseIP
{
    if (self.chooseIPArray.count == 0)
    {
        [self requestIP];
    }
    else if (self.chooseIPArray.count > 1)
    {
        self.chooseIPTableView.hidden = !self.chooseIPTableView.hidden;
    }
}

- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
    
    if (!self.chooseIPTableView.hidden)
    {
        [self chooseIP];
    }
}

#pragma mark - 网络请求
- (void)requestIP
{
    //获取上一次存入的IP数据
    NSMutableDictionary *ipDic       = [NSMutableDictionary dictionaryWithDictionary:[[LQKeyValueStore shareInstance].keyValueStore getObjectById:SQL_IP_Key fromTable:SQL_Account_TableName]];
    NSString *name = ipDic[@"name"];
    NSString *accountid = ipDic[@"accountid"];
    NSString *note = ipDic[@"note"];
    
    NSMutableDictionary *accountDic       = [NSMutableDictionary dictionaryWithDictionary:[[LQKeyValueStore shareInstance].keyValueStore getObjectById:SQL_Account_Key fromTable:SQL_Account_TableName]];
    NSString *loginSuccess  = accountDic[@"loginSuccess"];
    
    //登陆等待指示器
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    hud.mode           = MBProgressHUDModeIndeterminate;
    hud.labelText      = @"正在获取接入点...";
    
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    NSString *urlSTr = [NSString stringWithFormat:@"%@/charge_app.json",IP];
    
    [manager GET:urlSTr parameters:nil success:^(AFHTTPRequestOperation *operation, id responseObject)
     {
        LQLog(@"%@",operation.responseString);
        
        [hud hide:YES];
        
        LQChooseIPArrayModel *model = [LQChooseIPArrayModel objectWithKeyValues:operation.responseString];
         self.chooseIPArray = [NSMutableArray arrayWithArray:model.chooseIPArray];
         
        
        //判断数组大于1时，刷新列表，等于1时，直接显示在输入框中
        if (self.chooseIPArray.count > 1)
        {
            self.chooseIPTextField.placeholder = @"请选择接入点";
            self.chooseIPTextField.rightViewMode = UITextFieldViewModeAlways;
            [self.chooseIPTableView reloadData];
            
            //滞空本地存储的接入点数据
            NSDictionary *dic = [NSDictionary dictionary];
            [[LQKeyValueStore shareInstance].keyValueStore putObject:dic withId:SQL_IP_Key intoTable:SQL_Account_TableName];
        }
        else
        {
            LQChooseIPModel *model = self.chooseIPArray[0];
            self.chooseIPTextField.text = model.note;
            
            //将新的数据存入数据库
            ipDic[@"name"] = model.name;
            ipDic[@"note"] = model.note;
            ipDic[@"accountid"] = model.accountid;
            [[LQKeyValueStore shareInstance].keyValueStore putObject:ipDic withId:SQL_IP_Key intoTable:SQL_Account_TableName];
        }
        
        //判断本地的ip数据在返回的数组是否存在，如果有则判断是否自动登陆
        for (LQChooseIPModel *model in self.chooseIPArray)
        {
            if ([model.name isEqualToString:name] && [model.note isEqualToString:note] && [model.accountid isEqualToString:accountid])
            {
                if ([loginSuccess boolValue])
                {
                    self.chooseIPTextField.text = model.note;
                    
                    //将新的数据存入数据库
                    ipDic[@"name"] = model.name;
                    ipDic[@"note"] = model.note;
                    ipDic[@"accountid"] = model.accountid;
                    [[LQKeyValueStore shareInstance].keyValueStore putObject:ipDic withId:SQL_IP_Key intoTable:SQL_Account_TableName];
                    
                    //登陆等待指示器
                    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
                    hud.mode = MBProgressHUDModeIndeterminate;
                    hud.labelText = @"正在登录...";
                    
                    [self doLoginRequest];
                }
            }
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error)
     {
        LQLog(@"%@",error);
         
         [hud hide:YES];
         
         //滞空本地存储的接入点数据
         NSDictionary *dic = [NSDictionary dictionary];
         [[LQKeyValueStore shareInstance].keyValueStore putObject:dic withId:SQL_IP_Key intoTable:SQL_Account_TableName];
         
         self.chooseIPTextField.placeholder = @"请点击获取接入点";
         
         UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"提示"
                                                             message:@"获取接入点失败，是否重新获取。"
                                                            delegate:self
                                                   cancelButtonTitle:@"取消"
                                                   otherButtonTitles:@"确定", nil];
         [alertView show];
    }];
}

/**
 *  登陆请求
 */
- (void)doLoginRequest
{
    //登陆等待指示器
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    hud.mode           = MBProgressHUDModeIndeterminate;
    hud.labelText      = @"正在登录...";
    
    //将账户密码存储到数据库
    [[LQKeyValueStore shareInstance].keyValueStore createTableWithName:SQL_Account_TableName];
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    dic[@"accountName"]      = self.accountTextField.text;
    dic[@"password"]         = self.passwordTextField.text;
    
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    NSString *urlStr                       = [NSString stringWithFormat:@"%@signon.do",[LQUrlString shareInstance].urlStr];
    NSDictionary *parameters               = @{@"LinkMobile":self.accountTextField.text,@"Pwd":self.passwordTextField.text};
    
    [manager POST:urlStr parameters:parameters success:^(AFHTTPRequestOperation *operation, id responseObject)
    {
        LQLog(@"%@",operation.responseString);
        
        [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
        
        LQLoginModel *loginModel = [LQLoginModel objectWithKeyValues:operation.responseString];
        
        if (loginModel.returns)
        {
            loginModel.linkMobile       = self.accountTextField.text;

            dic[@"loginSuccess"]        = [NSNumber numberWithBool:YES];
            dic[@"sessionid"]           = loginModel.sessionid;

            LQAccountVC *accountVC      = [[LQAccountVC alloc] init];
            accountVC.loginModel        = loginModel;
            LQNavigationController *nav = [[LQNavigationController alloc] initWithRootViewController:accountVC];
            [self presentViewController:nav animated:NO completion:nil];
        }
        else
        {
            dic[@"loginSuccess"] = [NSNumber numberWithBool:NO];

            UIAlertView *alter   = [[UIAlertView alloc] initWithTitle:nil
                                                            message:loginModel.info
                                                           delegate:nil
                                                  cancelButtonTitle:nil
                                                  otherButtonTitles:@"确定", nil];
            [alter show];
        }
        
        [[LQKeyValueStore shareInstance].keyValueStore putObject:dic withId:SQL_Account_Key intoTable:SQL_Account_TableName];
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        
        LQLog(@"%@",error);
        
        dic[@"loginSuccess"] = [NSNumber numberWithBool:NO];
        [[LQKeyValueStore shareInstance].keyValueStore putObject:dic withId:SQL_Account_Key intoTable:SQL_Account_TableName];

        [MBProgressHUD hideAllHUDsForView:self.view animated:NO];

        MBProgressHUD *hud   = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        hud.labelText        = HTTPRequestErrer_Text;
        hud.mode             = MBProgressHUDModeText;
        [hud hide:YES afterDelay:1.5];
        
    }];
}


#pragma mark -
#pragma mark ==============UIAlertViewDelegate==============
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 1)
    {
        [self requestIP];
    }
}

#pragma mark -
#pragma mark ==============UITableViewDataSource,UITableViewDelegate==============
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.chooseIPArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [[UITableViewCell alloc] init];
    
    LQChooseIPModel *model = self.chooseIPArray[indexPath.row];
    cell.textLabel.text = model.note;
    cell.textLabel.font = [UIFont systemFontOfSize:15];
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 30;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self chooseIP];
    
    LQChooseIPModel *model = self.chooseIPArray[indexPath.row];
    
    self.chooseIPTextField.text = model.note;
    
    NSDictionary *dic = @{@"name":model.name,@"note":model.note,@"accountid":model.accountid};
    [[LQKeyValueStore shareInstance].keyValueStore putObject:dic withId:SQL_IP_Key intoTable:SQL_Account_TableName];
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

#pragma mark - Textfield Delegate
//释放键盘
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self.view endEditing:YES];
    
    return YES;
}

//限制textfield字符长度
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    NSString * toBeString = [textField.text stringByReplacingCharactersInRange:range withString:string]; //得到输入框的内容
    
    if ([toBeString length] > 20)
    {
        textField.text = [toBeString substringToIndex:20];
        return NO;
    }
    
    if (textField == self.accountTextField)
    {
        return [[Regex shareInstance] isTelNum:toBeString];
    }
    
    return YES;
}

@end
